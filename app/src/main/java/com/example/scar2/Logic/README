The current process works as followed:


Storing:

1. Pad file
2. Add header information (ie: padding amount)
3. use RS alg to encode data into k initial chunks and finally n chunks
4. encrypt each chunk
5. compute hashchain [H]
6. using H, store each chunk to their proper server with (fn, Chunk_Data)

Note: H_i -> Chunk_i -> Server_{HC_i % Number_of_Servers}


Getting:

1. Compute hashchain[H]
2. Using H, get as many chunks as we can from their servers with (fn, Chunk_Data)

Note: H_i -> Chunk_i -> Server_{HC_i % Number_of_Servers}

3. Decrypt each chunk
4. use RS alg to take K chunks and turn it into our original input data
5. remove padding from input data
